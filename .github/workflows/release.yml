name: Release build

on:
  push:
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:
  prepare:
    name: Create dist
    runs-on: ubuntu-latest
    container: node:16
    strategy:
      matrix:
        lambda: ["lambda/webhook", "lambda/runner"]
    steps:
      - name: Extract lambda name
        id: lambda
        env:
          LAMBDA: ${{ matrix.lambda }}
        run: echo "name=${LAMBDA##*/}" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v3
      - name: Add zip
        run: apt update && apt install zip
      - name: Build dist
        working-directory: ${{ matrix.lambda }}
        run: npm install && npm test && npm build && npm lambda:zip
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.lambda.outputs.name }}
          path: ${{ matrix.lambda }}/dist/${{ steps.lambda.outputs.name }}.zip
          retention-days: 1

  release:
    name: release
    runs-on: ubuntu-latest
    needs:
      prepare
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          #persist-credentials: false
      - uses: actions/download-artifact@v3
        with:
          name: webhook
          path: artifacts
      - uses: actions/download-artifact@v3
        with:
          name: runner
          path: artifacts

      - name: Dry run release
        if: github.event_name != 'pull_request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cp .release/* .
          npm install
          npm release -d
      - name: Release
        if: github.event_name != 'pull_request' && contains('refs/heads/main', github.ref)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cp .release/* .
          npm install
          npm release